namespace pkg.liaison;

enum BinaryOp: byte {
    EQ,
    NE,
    LT,
    GT,
    LE,
    GE
}

enum TagType : byte { INT, STR }

table Tag {
    key: [ubyte];
    value: [ubyte];
    tagType: TagType;
}

table TagQuery {
    tag: Tag;
    op: BinaryOp;
}

enum TraceState : byte {
    ALL,
    SUCCESS,
    ERROR
}

enum QueryOrder : byte {
    ByStartTime,
    ByDuration
}

enum Sort : byte {
    DESC,
    ASC
}

table SegmentRecord {
    segmentID: string;
    traceID: string;
    statement: string;
    serviceID: string;
    serviceInstanceId: string;
    endpointName: string;
    endpointId: string;
    startTime: uint64;
    endTime: uint64;
    duration: uint64;
    traceState: TraceState;
    dataBinary: [ubyte];
    tags: [Tag];
}

table BasicTrace {
    segmentID: string;
    endpointNames: [string];
    duration: uint64;
    startTime: uint64;
    traceState: TraceState;
    traceIDs: [string];
}

table TraceBrief {
    traces: [BasicTrace];
    total: int32;
}

table TraceQueryCriteria {
    startTime: uint64;
    endTime: uint64;
    minDuration: uint64;
    maxDuration: uint64;
    endpointName: string;
    endpointID: string;
    serviceID: string;
    serviceInstanceID: string;
    limit: uint32;
    from: uint32 = 0;
    queryOrder: QueryOrder = ByStartTime;
    sort: Sort = DESC;
    traceState: TraceState = ALL;
    tags: [Tag];
}

table Trace {
    segments: [SegmentRecord];
}

table GetTraceRequest {
    traceID: string;
}

rpc_service Liaison {
    GetTrace(GetTraceRequest):Trace;
    QueryTraces(TraceQueryCriteria):TraceBrief;
}